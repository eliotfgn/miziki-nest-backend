// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ARTIST
}

enum AlbumType {
  ALBUM
  SINGLE
  EP
}

model User {
  id               String     @id @default(uuid())
  email            String     @unique
  username         String
  password         String
  firstname        String
  lastname         String
  profilePic       String
  role             Role       @default(USER)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  createdPlaylists Playlist[]
}

model Tag {
  id      BigInt  @id @default(autoincrement())
  name    String  @unique
  albums  Album[]
  Track   Track?  @relation(fields: [trackId], references: [id])
  trackId String?
}

model Artist {
  id             String  @id @default(uuid())
  name           String
  bio            String
  profilePic     String
  followersCount Int
  albums         Album[]
  tracks         Track[]
}

model Album {
  id          String    @id @default(uuid())
  title       String
  cover       String
  label       String
  releaseDate DateTime
  likesCount  BigInt    @default(0)
  artists     Artist[]
  type        AlbumType
  tags        Tag[]
  tracks      Track[]
}

model Track {
  id           String   @id @default(uuid())
  title        String
  duration     Int
  audio        String
  likesCount   Int      @default(0)
  streamsCount Int?     @default(0)
  album        Album    @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId      String
  tags         Tag[]
  artists      Artist[]
}

model Playlist {
  id          String  @id @default(uuid())
  title       String
  description String?
  cover       String?
  likesCount  Int     @default(0)
  isPrivate   Boolean @default(true)
  author      User    @relation(fields: [authorId], references: [id])
  authorId    String
}
